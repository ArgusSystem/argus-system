consumer:
  host: argus
  username: argus
  password: panoptes
  queue: faces

face_embedder:
  type: pytorch_facenet

face_classifier:
  # 'model' specifies the local path where the classifier model will be loaded from
  #model: classifier/model/svclassifier_edu_gabo_pytorch_facenet.pkl
  #model: classifier/model/distanceclassifier_edu_gabo_pytorch_facenet.pkl
  #model: classifier/model/distance_friends_pytorch_facenet.pkl
  #model: classifier/model/sv_friends_pytorch_facenet.pkl
  model: classifier/model/classifier.pkl
  # 'minio' specifies a filename for a classifier model that will be downloaded from minio on startup
  # it is saved to the path specified by the 'model' variable above
  # replace with an empty string to disable: minio: ''
  # (currently downloaded from the 'people' bucket)
  minio: classifier.pkl
  #minio: ''
  threshold: 0.6

publisher_web:
  host: argus
  username: argus
  password: panoptes
  exchange: argus
  routing_key: published_detected_faces

publisher_summarizer:
  host: argus
  username: argus
  password: panoptes
  exchange: argus
  routing_key: face_rule_check

publisher_clusterer:
  host: argus
  username: argus
  password: panoptes
  exchange: argus
  routing_key: unknown_faces

logging:
  level: DEBUG

storage:
  host: argus
  port: 9500
  access_key: argus
  secret_key: panoptes

db:
  database: argus
  host: argus
  port: 5432
  user: argus
  password: panoptes

tracer:
  host: argus
  port: 6831